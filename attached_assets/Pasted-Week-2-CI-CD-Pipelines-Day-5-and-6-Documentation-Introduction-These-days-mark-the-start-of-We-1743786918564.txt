Week 2: CI/CD Pipelines - Day 5 and 6 Documentation
Introduction
These days  mark  the start of Week 2, where I’ll be diving into Continuous Integration and Continuous Deployment (CI/CD) Pipelines. My goal for today is to understand the fundamentals of CI/CD, explore tools like GitHub Actions, and learn how to integrate Docker into the pipeline. I’ll be studying tutorials, reading documentation, and preparing for hands-on tasks in the coming days.
What I Plan to Learn
Here’s what I’ll focus on Day 5 and 6:
Continuous Integration (CI):
What is CI, and why is it important?
Benefits: Automated builds, testing, and code quality checks.
Continuous Deployment/Delivery (CD):
What is CD, and how does it differ from CI?
Deployment strategies: Blue-Green, Rolling, and Canary.
GitHub Actions:
What is GitHub Actions, and how does it work?
How to create a basic workflow using YAML.
Docker Integration:
Why is it used in CI/CD?
How to build and push Docker images in a pipeline.
Resources
To learn these concepts, I’ll be using the following resources:
GitHub Actions Tutorial:
GitHub Actions Official Documentation





CI/CD Concepts:
What is CI/CD?

CI/CD Best Practices

Node.js and NPM:
Node.js Documentation
NPM Documentation









Since I’m still in the learning phase, I focused on understanding the concepts and tools. Here’s what I did:
1. Watched Tutorials
I watched a GitHub Actions tutorial to understand how to set up a basic CI/CD pipeline.
I also watched a Docker tutorial to learn how to containerize applications and push images to Docker Hub.
2. Read Documentation
I read the GitHub Actions documentation to understand workflow syntax and how to configure jobs.
I explored the Docker documentation to learn about Dockerfiles and container registries.
3. Explored CI/CD Concepts
I studied the differences between Continuous Integration, Continuous Delivery, and Continuous Deployment.
I learned about deployment strategies like Blue-Green, Rolling, and Canary.

Conclusion
So These Days, I am learning about the fundamentals of CI/CD, GitHub Actions, and Docker. I’m excited to start implementing these concepts in the coming days and building my first CI/CD pipeline. By the end of the week, I hope to have a fully automated pipeline that builds, tests, and deploys my application.




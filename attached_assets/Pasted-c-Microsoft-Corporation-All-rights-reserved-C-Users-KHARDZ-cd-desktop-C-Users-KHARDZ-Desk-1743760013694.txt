c) Microsoft Corporation. All rights reserved.

C:\Users\KHARDZ>cd desktop

C:\Users\KHARDZ\Desktop>cd Week 3

C:\Users\KHARDZ\Desktop\Week 3>wsal
'wsal' is not recognized as an internal or external command,
operable program or batch file.

C:\Users\KHARDZ\Desktop\Week 3>wsl
rae@Rae:/mnt/c/Users/KHARDZ/Desktop/Week 3$ git clone -b Week-3 https://github.com/draiimon/Oaktree.git
d OaktreeCloning into 'Oaktree'...
remote: Enumerating objects: 2031, done.
remote: Counting objects: 100% (810/810), done.
remote: Compressing objects: 100% (585/585), done.
remote: Total 2031 (delta 171), reused 789 (delta 157), pack-reused 1221 (from 1)
Receiving objects: 100% (2031/2031), 4.89 MiB | 3.17 MiB/s, done.
Resolving deltas: 100% (342/342), done.
Updating files: 100% (1510/1510), done.
rae@Rae:/mnt/c/Users/KHARDZ/Desktop/Week 3$ sudo apt-get update
 install -y gnupg software-properties-common
wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
sudo apt-get update
sudo apt-get install terraform[sudo] password for rae:
Sorry, try again.
[sudo] password for rae:
Get:1 https://download.docker.com/linux/ubuntu noble InRelease [48.8 kB]
Hit:3 http://archive.ubuntu.com/ubuntu noble InRelease
Get:4 http://archive.ubuntu.com/ubuntu noble-updates InRelease [126 kB]
Get:5 http://security.ubuntu.com/ubuntu noble-security InRelease [126 kB]
Hit:6 https://deb.nodesource.com/node_18.x nodistro InRelease
Hit:7 https://apt.releases.hashicorp.com noble InRelease
Get:8 http://archive.ubuntu.com/ubuntu noble-backports InRelease [126 kB]
Get:9 http://security.ubuntu.com/ubuntu noble-security/main amd64 Components [9000 B]
Ign:2 https://pkg.jenkins.io/debian binary/ InRelease
Hit:10 https://pkg.jenkins.io/debian binary/ Release
Get:11 http://security.ubuntu.com/ubuntu noble-security/universe amd64 Components [52.3 kB]
Get:12 http://security.ubuntu.com/ubuntu noble-security/restricted amd64 Components [212 B]
Get:13 http://security.ubuntu.com/ubuntu noble-security/multiverse amd64 Components [212 B]
Get:14 http://archive.ubuntu.com/ubuntu noble-updates/main amd64 Packages [987 kB]
Get:16 http://archive.ubuntu.com/ubuntu noble-updates/main amd64 Components [151 kB]
Get:17 http://archive.ubuntu.com/ubuntu noble-updates/universe amd64 Packages [1050 kB]
Get:18 http://archive.ubuntu.com/ubuntu noble-updates/universe amd64 Components [365 kB]
Get:19 http://archive.ubuntu.com/ubuntu noble-updates/restricted amd64 Components [212 B]
Get:20 http://archive.ubuntu.com/ubuntu noble-updates/multiverse amd64 Components [940 B]
Get:21 http://archive.ubuntu.com/ubuntu noble-backports/main amd64 Components [7076 B]
Get:22 http://archive.ubuntu.com/ubuntu noble-backports/universe amd64 Components [15.7 kB]
Get:23 http://archive.ubuntu.com/ubuntu noble-backports/restricted amd64 Components [212 B]
Get:24 http://archive.ubuntu.com/ubuntu noble-backports/multiverse amd64 Components [212 B]
Fetched 3066 kB in 7s (430 kB/s)
Reading package lists... Done
W: http://pkg.jenkins.io/debian/binary/Release.gpg: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
rae@Rae:/mnt/c/Users/KHARDZ/Desktop/Week 3$ aws configure
AWS Access Key ID [****************DCH6]:
AWS Secret Access Key [****************c1FA]:
Default region name [ap-southeast-1]:
Default output format [json]:
rae@Rae:/mnt/c/Users/KHARDZ/Desktop/Week 3$ terraform init
erraform plan
terraform apply
Terraform initialized in an empty directory!

The directory has no Terraform configuration files. You may begin working
with Terraform immediately by creating Terraform configuration files.
rae@Rae:/mnt/c/Users/KHARDZ/Desktop/Week 3$ terraform plan
╷
│ Error: No configuration files
│
│ Plan requires configuration to be present. Planning without a configuration would mark everything for destruction,
│ which is normally not what is desired. If you would like to destroy everything, run plan with the -destroy option.
│ Otherwise, create a Terraform configuration file (.tf file) and try again.
╵
rae@Rae:/mnt/c/Users/KHARDZ/Desktop/Week 3$ terraform apply
╷
│ Error: No configuration files
│
│ Apply requires configuration to be present. Applying without a configuration would mark everything for
│ destruction, which is normally not what is desired. If you would like to destroy everything, run 'terraform
│ destroy' instead.
╵
rae@Rae:/mnt/c/Users/KHARDZ/Desktop/Week 3$





